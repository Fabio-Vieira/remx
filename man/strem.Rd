% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remx.R
\name{strem}
\alias{strem}
\title{strem}
\usage{
strem(data, update = F, model = NULL)
}
\arguments{
\item{data}{This is either a list containing edgelist, and reh object pre processed by remify, and statistics for the batches of the networks (see example below), or a character string containing the paths where the data is saved in the hard drive. In case the data is in HD the batches should be saved separately (in format .rds) and each should be a list with edgelist, an reh object pre processed by remify, and statistics.}

\item{update}{Set to \code{TRUE} to update the estimates with new batches. You should provide a model previously fitted with the \code{strem} function.}

\item{model}{A model previously fitted with the \code{strem} function.}
}
\value{
A list of class \code{strem} with the following objects:

\itemize{
\item \code{beta} a matrix with the estimate parameters per batch.
\item \code{omega} a 3-d array containing the estimated covariance matrix per batch.
\item \code{timeL} the time of the observed event of the last batch
\item \code{run_time} the time it took for the model to run.
}
}
\description{
A function to streaming relational event models. A data stream is continuously augmented with new events, this function allows quick updating of the estimates.
}
\examples{

#First install remulate, remstats and remify

edgelist <- stream$edgelist

library(remstats)

#We will devide the network in 10 batches of 500
events <- seq(1, 5001, by = 500)

#Declaring which effects we want remstats to compute
effects <- ~ remstats::inertia(scaling = "std") + remstats::reciprocity(scaling = "std")


#Getting the remify object for the entire sequence
rehObj <- remify::remify(edgelist, model = "tie")

data <- vector("list")

for(i in 2:length(events)){
  #Computing statistics
  stats <- remstats::tomstats(effects, rehObj, start = events[i-1], stop = events[i]-1)
  edl <- edgelist[events[i-1]:(events[i]-1),]
  #Every piece needs to be stored a in a list with edgelist and statistics
  data[[i-1]] <- list(edgelist = edl,
                      reh = remify::remify(edl, model = "tie", 
                                           actors = stream$actors), #pre processing
                      statistics = stats)
}
#Let's compute the effects for the first 7 batches of the networks
fit <- strem(data[1:7])

#printing the parameters
print(fit)
#Plotting a trend line of the estimates
plot(fit)

#Now we can update the model with the remaining 3 batches

fit2 <- strem(data[8:10], update = TRUE, model = fit)


#printing the parameters
print(fit2)
#Plot a trend line with the estimates
plot(fit2)

}
