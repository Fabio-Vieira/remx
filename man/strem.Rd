% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remx.R
\name{streamrem}
\alias{streamrem}
\title{streamrem}
\usage{
streamrem(
  data,
  actors = NULL,
  directed = TRUE,
  ordinal = FALSE,
  update = F,
  model = NULL
)
}
\arguments{
\item{data}{This is either a list containing edgelist and statistics for the batches of the networks (see example below), or a character string containing the paths where the data is saved in the hard drive. In case the data is in HD the batches should be saved separately (in format .rds) and each should be a list with edgelist and statistics.}

\item{actors}{A character vector containing the actors in the network, this should be particularly used when not every actor has been observed. See \code{?remify::remify}.}

\item{directed}{If \code{TRUE} then the network is treated as directed.}

\item{ordinal}{Set to \code{TRUE} in case only the order of the events is known.}

\item{update}{Set to \code{TRUE} to update the estimates with new batches. You should provide a model previously fitted with the \code{streamrem} function.}

\item{model}{A model previously fitted with the \code{streamrem} function.}
}
\description{
A function to estimate relational event models on data streams.
}
\examples{

#First install remulate, remstats and remify
#library(devtools)
#install_github("TilburgNetworkGroup/remulate")
#devtools::install_github("TilburgNetworkGroup/remify")
#devtools::install_github("TilburgNetworkGroup/remstats")

edgelist <- stream

library(remstats)

names(edgelist) <- c("time", "actor1", "actor2")

actors <- as.character(1:10)

#We will devide the network in 10 batches of 500
events <- seq(1, 5001, by = 500)

#Declaring which effects we want remstats to compute
effects <- ~ remstats::inertia(scaling = "std") + remstats::reciprocity(scaling = "std")

#Getting the remify object
rehObj <- remify::remify(edgelist, model = "tie", actors = actors)

data <- vector("list")

for(i in 2:length(events)){
  #Computing statistics
  stats <- remstats::tomstats(effects, rehObj, start = events[i-1], stop = events[i]-1)
  edl <- edgelist[events[i-1]:(events[i]-1),]
  #Every piece needs to be stored a in a list with edgelist and statistics
  data[[i-1]] <- list(edgelist = edl,
                      statistics = stats)
}
#Let's compute the effects for the first 7 batches of the networks
fit <- streamrem(data[1:7], actors)

#printing the parameters
print(fit)
#Plotting a trend line of the estimates
plot(fit)

#Now we can update the model with the remaining 3 batches
fit2 <- streamrem(data[8:10], actors, update = TRUE, model = fit)

#printing the parameters
print(fit2)
#Plot a trend line with the estimates
plot(fit2)

}
